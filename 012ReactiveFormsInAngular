Section 12 - Reactive Forms in Angular

- we were using templates on the project. now we will use reactive Forms
- reactive forms will help us to design forms on the .ts components itself

lab 124 Introduction to Reactive forms in Angular
*. on SPA, goto register/register.component.ts
*. create a field registerForm: FormGroup;
*. create FormControls inside FormGroup on the ngInit
*. goto app.module.ts Add ReactiveFormsModule on the imports Section
*. now update the register.component.html with FormGroup and other changes

lab 125: Validation in Reactive forms
*. goto register.component.ts add validator FormControl('Hello', Validators.required

- for password we need to create a custom validator
lab 126: Custom Validators in Reactive forms
*. goto register.component.ts and add passwordMatchValidator
*. add , this.passwordMatchValidator); to the FormGroup on the ngOnInut

lab 127: Providing Validation feedback to the user
*. goto register.component.html and add ngClass for validation for showing up invalid-feedback div
*. for password field do 3 ngif conditions for checking required, min and max length  for showing up invalid-feedback div
*. the confirm password is bit complex -  1st is required and next is mismatch

lab 128: Using the Reactive Forms FormBuilder Service
*. goto register.component.ts and add DI on the contrcutor fb:FormBuilder
*. add a new method createRegisterForm and (remove existing code from ngInit) and invoke createRegisterForm]

lab 129: Expanding the Registration form
*. goto register.component.ts. add gender, , , to the createRegisterForm
*. goto register.component.html add the gender radio button, DOB, city and country which is provided on lesson snippet
*. Make the register button disable if the form is invalid

-polyfill.ts allow us to uncomment some functionliaties to be supported on some browsers

lab 130: Handling Dates in Forms
*. check documentation of datepicker on ngx-bootstrap, https://valor-software.com/ngx-bootstrap/#/datepicker
*. goto app.module.ts add BrowserAnimationsModule and BsDatepickerModule.forRoot() on the imports
*. goto styles.css and import bs-datepicker.css
*. goto register.component.html for the datepicker, change the type to text and bsDatepicker
*. now we need to change the theme - goto register.component.ts and add bsConfig: Partial<BsDatepickerConfig>;
*. initialize bsConfig in ngOnInit and add bsConfig on html
