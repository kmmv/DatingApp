
139 Paring in ASP.NET Web API
***
Paging by passed by query string
always page results
Stored query commands in variable
Execution is deferred
IQueryable<T> creates an expression tree
Execution: ToListAsync(), ToArrayAsync(), ToDictionary()
Singleton queries


lab 140-141 Adding a PagedList class
***
*. on API goto Helpers folder and create a PagedList class
*. for pagination headers add helper class goto Helpers folder create PaginationHeader class
*. goto the extentions.cs add AddPagination function
*. Now API needs to send back info from UsersController
    -to do this we create another helper class named UserParams

lab 142 Setting up the paging helper class
***
*. goto IDatingRepository and modify the GetUsers method (change the IEnumerable to PagedList)
        - and return  await PagedList<User>.CreateAsync(users, userParams.PageNumber, userParams.PageSize);
*. goto UsersController, modify the GetUsers to receive PaginationList instead of usersToReturn
*. Debug the http://localhost:5000/api/users on Postman to view how the PagedList is created
*. On the results on postman under Headers  the Pagination info is displayed
      - Now the pagination information is in TitleCase we need to change it to CamelCase
*. goto Extensions add camelCaseFormatter.ContractResolver
*. test the modifications on Postman using pageNumber and pageSize
      - http://localhost:5000/api/users?pageNumber=2&pageSize=3

lab 143 Setting up pagination in the SPA
***
*. On the SPA, create a new interface Pagination inside _models
*. On the user.service.ts modify getUsers to get paginatedResult
*. On the member-list.resolver.ts return this.userService.getUsers(this.pagenNumber, this.pageSize)
*. On the member-list.component.ts

- Now we need to add pagination to the browser

lab 144 Using nix-bootstrap pagination module
***
*. goto https://valor-software.com/ngx-bootstrap/#/pagination
*. add pagination to the member-list.component.html
*. goto appmodule.ts and add PaginationModule.forRoot()
*. goto member-list.component.ts and add a pagination variable
      - implement loadUsers with pagination and call the loadUsers from pageChanged
*. on the MemberListComponent.html make sure that the pageChanged event is invoked

lab 145 Filtering in the API
***
*. on the API goto userParams.cs and add UserId and Gender
*. goto UsersController on the Httpget method
      - obtain values for userParams.userId   and userParams.Gender
*. goto IDatingRepository.cs add filtering parameters to filter
*. goto Postman and test http://localhost:5000/api/users?gender=female

lab 146 Adding additional filtering parameters to the API
***
*. On the API add MinAge and MaxAge on the UserParams
*. On the DatingRepository add MinAge and MaxAge inside GetUsers method
*. Test the age filter on Postman  http://localhost:5000/api/users?minAge=24&maxAge=32

lab 147 Adding filtering functionality to the SPA
***
*. On the SPA, on the MemberListComponent add html codesnippet to add filter inputs and buttons
*. On the MemberListComponent.ts  add variable user, genderList and userParams
*. add filtering options on ngOnInit
*. goto MemberListComponent.html add ngForm, ngModel etc
*. goto MemberListComponent.ts add resetFilters method
*. on the loadUsers add this.userParams inside the GetUsers
*. userParams is not defined so goto user.service.ts and add userParams

lab 148 Sorting results in the API
***
*. on the API go to userParams and add OrderBy
*. goto IDatingRepository add OrderbyDecending  and implement if userParams.Orderby
*. Test the orderby on Postman http://localhost:5000/api/users?gender=female&orderBy=created

lab 149 Adding the Sorting functionality to the SPA
***
*. goto ngx-bootstrap goto app.module.ts and add buttonsModule.forRoot
*. goto member-list.component.ts and add this.userParams.orderBy = "lastActive"; on ngOnInit
*. goto memvber-list.component.html and add btn-group float-right after resetFilters button
*. add ngModel and click event to the btn-group which is created above
*. goto user.service.ts and add   params = params.append('orderBy', userParams.orderBy); to userParams



End of Section 14


        -
